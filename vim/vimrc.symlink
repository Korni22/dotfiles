set nocompatible " Use Vim defaults (much better!)

" Vundle
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#rc()

Plugin 'gmarik/Vundle.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'majutsushi/tagbar'
Plugin 'kien/ctrlp.vim'
Plugin 'sjl/gundo.vim'
Plugin 'scrooloose/nerdcommenter'
Plugin 'mileszs/ack.vim'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'kchmck/vim-coffee-script'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
Plugin 'chriskempson/base16-vim'
Plugin 'groenewege/vim-less'
Plugin 'fatih/vim-go'
Plugin 'SirVer/ultisnips'

" call vundle#end()
filetype plugin indent on

" Don't create a .swp file
set noswapfile

" Fix bad autindention of pasted text
set paste

" We don't need no backup
set nobackup
set encoding=utf-8

" Display incomplete commands
set showcmd

" Set leader to ,
let mapleader = ","

" Show line numbers
set number

" Show colorcolumn
set colorcolumn=79

" Auto indent
set autoindent

" Faster reloading
set ttyfast

" Enable syntax highlighting
syntax enable

" Set color scheme
set background=dark
colorscheme base16-3024

" Powerline
set laststatus=2
set guifont=Hermit:h13
let g:Powerline_symbols = 'fancy'
set t_Co=256
set fillchars+=stl:\ ,stlnc:\
set term=xterm-256color
set termencoding=utf-8

" Don't wrap lines
set nowrap

" A tab is 2 spaces
set tabstop=2 shiftwidth=2

" Use spaces,not tabs
set expandtab
set sw=2
set sts=2

" Default to Unix LF line endings
set ffs=unix

" Backspace through everything in insert mode
set backspace=indent,eol,start

" Wrap at 79 chars
set wrap
set textwidth=79
set formatoptions=qrn1
set showbreak=↪

" Highlight matches
set hlsearch

" Incremental searching
set incsearch

" Search case insensitive
set ignorecase

" ..unless they contain at least one capital letter
set smartcase

" Reload files when changed on disk
set autoread

" Fix broken backspace in some setups
set backspace=2

" Show trailing whitespace
set list
set listchars=tab:▸\ ,trail:▫

" Configure wildmenu
set wildignore=log/**,node_modules/**,target/**,tmp/**,*.rbc
set wildmenu
set wildmode=longest,list,full

" Configure ctrl-p
let g:ctrlp_custom_ignore = 'node_modules\|bower_components\|vendor\|tags'

" Use Ag instead of Ack
let g:ackprg = 'ag --nogroup --nocolor --column'

" Trigger configuration for UltiSnips
let g:UltiSnipsExpandTrigger="<tab>"

" Remove whitespace on save
autocmd BufWritePre * :%s/\s\+$//e

" Key bindings
nmap j gj
nmap k gk
nnoremap <leader>t :NERDTreeTabsToggle<CR>
nnoremap <leader>u :GundoToggle<CR>
nnoremap <silent> <Leader>/ :nohlsearch<CR>
nnoremap <c-t> :CtrlP<CR>
nnoremap <c-f> :CtrlPTag<CR>
nnoremap <leader>a :Ack
nnoremap <leader>cr :%s/\r//<CR>

" Go stuff
au FileType go nmap <leader>r <Plug>(go-run)
au FileType go nmap <leader>b <Plug>(go-build)
au FileType go nmap <leader>t <Plug>(go-test)
au FileType go nmap gd <Plug>(go-def)

" Highlights
highlight LineNr ctermbg=233
highlight ColorColumn ctermbg=233
highlight Visual ctermbg=236

" Tabs
highlight TabLineFill ctermfg=LightGreen ctermbg=233
highlight TabLine ctermfg=LightGrey ctermbg=233
highlight TabLineSel ctermfg=LightGrey ctermbg=235
highlight Title ctermfg=LightBlue ctermbg=None

" CtrlP
highlight CursorLine ctermfg=White
"highlight CtrlPMatch ctermfg=White ctermbg=235
