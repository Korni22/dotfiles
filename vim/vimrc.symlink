" Use Vim defaults
set nocompatible

" Enable syntax highlighting
syntax enable

" Set up plug
if filereadable(expand("~/.vimrc.plug"))
  source ~/.vimrc.plug
endif

" Ensure ftdetect is working
filetype plugin indent on

" Theme
set background=dark
let base16colorspace=256
colorscheme base16-default

" General configuration
set autoindent
set autoread                   " Reload files on change
set backspace=indent,eol,start " Backspace through everything in insert mode
set backupcopy=yes
set clipboard=unnamed
set colorcolumn=79
set encoding=utf-8
set expandtab                  " Expand tabs to spaces
set ffs=unix                   " Default to LF
set hlsearch                   " Highlight search results
set smartcase                  " Search is case sensitive if any caps
set incsearch                  " Seach as you type
set laststatus=2               " Always show statusline
set list                       " Show trailing whitespace
set listchars=tab:▸\ ,trail:▫
set ruler
set scrolloff=3
set shiftwidth=2
set showbreak=↪
set showcmd
set softtabstop=2
set tabstop=4
set textwidth=79
set ttyfast
set wildignore=log/**,node_modules/**,target/**,tmp/**,*.rbc
set wildmenu
set wildmode=longest,list,full
set wrap
set relativenumber
set cursorline
set noswapfile

" Shortcuts
let mapleader = ","
nnoremap          <F5>      :NERDTreeTabsToggle<CR>
nnoremap          <F6>      :TagbarToggle<CR>
nnoremap          <leader>u :GundoToggle<CR>
nnoremap <silent> <leader>/ :nohlsearch<CR>
nnoremap          <c-t>     :CtrlP<CR>

" CTRL-P
let g:ctrlp_custom_ignore='node_modules\|bower_components\|vendor\|tags\|_workspace'

" Airline
let g:airline_powerline_fonts            = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline_enable_branch              = 1
let g:airline_enable_syntastic           = 1

" YCM
let g:ycm_key_list_select_completion   = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']

" SuperTab
let g:SuperTabDefaultCompletionType = '<C-n>'

" UltiSnips
let g:UltiSnipsExpandTrigger       = '<tab>'
let g:UltiSnipsJumpForwardTrigger  = '<tab>'
let g:UltiSnipsJumpBackwardTrigger = '<s-tab>'

" Remove whitespace on save
autocmd BufWritePre * :%s/\s\+$//e

" Make shortcuts
nmap <leader>m  :!make<CR>
nmap <leader>mr :!make run<CR>
nmap <leader>mc :!make clean<CR>

" Go shortcuts
au FileType go nmap <leader>r <Plug>(go-run)
au FileType go nmap <leader>t <Plug>(go-test)
au FileType go nmap gd        <Plug>(go-def)
au FileType go nmap <leader>c <Plug>(go-coverage)

" Clear background of Gitgutter
hi clear SignColumn
